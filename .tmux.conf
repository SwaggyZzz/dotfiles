# ╭──────────────────────────────────────────────────────────╮
# │                         Plugins                          │
# ╰──────────────────────────────────────────────────────────╯

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# set -g @catppuccin_flavor 'mocha'
# set -g @catppuccin_window_default_text "#{s|$USER|~|:#{b:pane_current_path}} #{s|yazi|󰇥|;s|python||;s|nvim||;s|bash||;s|htop|󰍛|;s|root|󰞄|;s|lazygit||;s|tmux||:pane_current_command}"
# set -g @catppuccin_window_current_text "#{s|$USER|~|:#{b:pane_current_path}} #{s|yazi|󰇥|;s|python||;s|nvim||;s|bash||;s|htop|󰍛|;s|root|󰞄|;s|lazygit||;s|tmux||:pane_current_command}"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#{b:pane_current_path} #{?window_zoomed_flag,,󰹑}"

# set -g @catppuccin_window_left_separator "█"
# set -g @catppuccin_window_right_separator "█ "
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_middle_separator "  █"
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_status "on"

set -g @catppuccin_status_modules_right "application cpu date_time session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

# auto install tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'

# ╭──────────────────────────────────────────────────────────╮
# │                         Options                          │
# ╰──────────────────────────────────────────────────────────╯

# new window retains current path, possible values are:
#   - true
#   - false (default)
tmux_conf_new_window_retain_current_path=false

# new pane retains current path, possible values are:
#   - true (default)
#   - false
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions (experimental), possible values are:
#   - true
#   - false (default)
tmux_conf_new_pane_reconnect_ssh=false

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
tmux_conf_new_session_prompt=false

# -- display -------------------------------------------------------------------

# RGB 24-bit colour support (tmux >= 2.2), possible values are:
#  - true
#  - false (default)
tmux_conf_24b_colour=true

# pane border style, possible values are:
#   - thin (default)
#   - fat
tmux_conf_theme_pane_border_style=thin

# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
# on macOS, this requires installing reattach-to-user-namespace
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=true

# Set true color
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -sa terminal-features ',xterm-kitty:RGB'

# 支持鼠标选择窗口，调节窗口大小
set -g mouse on

# 起始编号从1开始
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# 关闭tab后自动调整编号
set-option -g renumber-windows on

set-window-option -g mode-keys vi

set-option -g allow-rename on

set -sg escape-time 0

set-option -g status-position bottom

# increase history size
set -g history-limit 1000000

# yazi
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

set -g pane-border-lines heavy

# ╭──────────────────────────────────────────────────────────╮
# │                       Keybindings                        │
# ╰──────────────────────────────────────────────────────────╯

# 分屏
bind-key v split-window -h -l 100 -c '#{pane_current_path}'
bind-key s split-window -v -l 30 -c '#{pane_current_path}'

# swap windows with shift+arrow with prefix
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

# copy from tmux to clipboard
# bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -r" \; display-message "Copied to selection"
# bind-key -T copy-mode-vi Y send-keys -X copy-pipe "xclip -r -selection clipboard" \; display-message "Copied to clipboard"
# bind-key C-p run-shell "xclip -o | tmux load-buffer - && tmux paste-buffer"

# Equally resize all panes
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical

# Select panes
# NOTE(arslan): See to prevent cycling https://github.com/tmux/tmux/issues/1158
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

# Resize panes
bind-key J resize-pane -D 10
bind-key K resize-pane -U 10
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10

# Disable confirm before killing
bind-key x kill-pane

# reload config file (change file location to your the tmux.conf you want to use)
bind-key r source-file ~/.tmux.conf

# ====================== nvim navigator ===========================
version_pat='s/^tmux[^0-9]*([.0-9]+).*/\1/p'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
tmux_version="$(tmux -V | sed -En "$version_pat")"
setenv -g tmux_version "$tmux_version"

bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R

